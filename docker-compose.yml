version: '3'
services:
  # frontend:
  #   build:
  #     context: ./nodejs
  #     dockerfile: ./Dockerfile.angular
  #     args:
  #       project: frontend
  #   ports:
  #     - 8000:80
  #   restart: on-failure
  #   volumes:
  #     - frontend_vol:/usr/src/frontend/
  #     - node_modules:/usr/src/frontend/node_modules/
  #   networks:
  #     - monorepo_net
  # api:
  #   build:
  #     context: ./nodejs
  #     dockerfile: ./Dockerfile.nest
  #     args:
  #       project: ocean
  #   ports:
  #     - 8003:3333
  #   restart: on-failure
  #   volumes:
  #     - ocean_vol:/usr/src/ocean/
  #     - node_modules:/usr/src/ocean/node_modules/
  #   networks:
  #     - monorepo_net
  express:
    image: mongo-express:1.0.0-alpha.4
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - "mongo"
    environment:
      ME_CONFIG_OPTIONS_EDITORTHEME: dracula
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  mongo:
    image: mongo:4.4.4
    restart: always
    ports:
      - 8082:27017
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

# volumes:
#   calypso_vol:
#   echo_vol:
#   frontend_vol:
#   ocean_vol:
#   node_modules:

networks:
  monorepo_net:
    driver: bridge
